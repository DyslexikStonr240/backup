#include"Tensor.h"
#include"DatasetReader.h"
#include"Classifier.h"
#include<iostream>
#include<string>


//int countCreate = 0;
//int countDestroy = 0;
float range = 1.0f;

int main(int argc,char** argv){

    //std::string path_to_extracted_mnist_files = "./MNIST_FILES";
    DatasetReader<signed char, unsigned char> reader;
    //Classifier classifier(reader);

    //classifier.scoreFunc(classifier._score, classifier._weights, classifier._trainImagesTranspose);
    //classifier._score.transpose2D();
    //classifier._score.out(10);
    std::cout << "Test " <<std::endl;
    //Tensor<unsigned char> tensor(3,3);

    Tensor<unsigned char> test;
    //test = tensor;
    //test.out(1,3);
    //std::cout << (long int)test.getTensor() << std::endl;
    //test.writeAll(1);
    //std::cout << "Test =" <<std::endl;

    std::cout << "WAITING" << std::endl;
    test = reader.get_test_labels();
    test.out(1,3);

    test = reader.get_train_labels();
    test.out(1,3);

    //reader.get_test_labels();
    /*std::cout << "test " << (long int)test.getTensor() << " " << "Orginianl " << (long int)reader.get_train_labels().getTensor() << std::endl;
    std::cout << "test " << (long int)test.getTensor() << " " << "Orginianl " << (long int)reader.get_train_labels().getTensor() << std::endl;
*/
    //std::cout << "Orginal 1" << (long int)&*reader.get_test_labels().getTensor() << std::endl;
    //std::cout << ptr << " " << &notptr << std::endl;
    //std::cout << "Orginianl 2" << (long int)reader.get_train_labels().getTensor() << std::endl;
    //std::cout << test.getTensor() << " " << reader.get_train_labels().getTensor() << std::endl;
    //reader.get_train_labels().out();
    //test.out();

    return 0;
}
